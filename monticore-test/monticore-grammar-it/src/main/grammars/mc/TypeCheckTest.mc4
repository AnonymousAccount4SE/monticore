/* (c) https://github.com/MontiCore/monticore */
package mc;

grammar TypeCheckTest extends de.monticore.types.MCSimpleGenericTypes,
                                        de.monticore.expressions.CommonExpressions,
                                        de.monticore.expressions.AssignmentExpressions,
                                        de.monticore.expressions.BitExpressions,
                                        de.monticore.literals.MCCommonLiterals,
                                        de.monticore.symbols.OOSymbols {

  TCCompilationUnit = MCPackageDeclaration?
                      MCImportStatement*
                      TCArtifact;

  interface TCElement;

  scope symbol TCArtifact implements Type = "tc" Name ("extends" superType:MCType)?    "{" TCElement* "}";

  FormalParameters = "(" FormalParameter* ")";

  FormalParameter = MCType Name;

  TCBlock = (TCVarDecl | Expression)*;

  scope symbol TCMethod implements TCElement,Method = ["static"]? MCReturnType
                                                         Name
                                                         FormalParameters
                                                         "{" TCBlock "}";

  symbol TCVarDecl implements TCElement,Field = ["static"]? MCType Name ("=" Expression)?;
}