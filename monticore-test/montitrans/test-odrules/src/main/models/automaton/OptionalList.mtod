/* (c) https://github.com/MontiCore/monticore */
grammar mc.testcases.Automaton;
pattern objectdiagram lhs {
    automaton_1 : mc.testcases.automaton._ast.ASTAutomaton {
    }

    state_1 : mc.testcases.automaton._ast.ASTState {
    }

    <<optional>> optional_1 : de.monticore.tf.ast.IOptional {
        <<list>> list_1 : de.monticore.tf.ast.IList {
           list_substate : mc.testcases.automaton._ast.ASTState {
             boolean initial [1] = false;
           }
        }
    }

    <<not>> state_2 : mc.testcases.automaton._ast.ASTState {
        boolean initial [1] = true;
    }

    composition automaton_1 -- (states) [*] state_1;
    composition state_1 -- (states) [*] list_substate;
    composition state_1 -- (states) [*] state_2;
}

replacement objectdiagram rhs {
    automaton_1 : mc.testcases.automaton._ast.ASTAutomaton;
    state_1 : mc.testcases.automaton._ast.ASTState;
    state_2 : mc.testcases.automaton._ast.ASTState;
    <<optional>> optional_1 : de.monticore.tf.ast.IOptional {
       <<list>> list_1 : de.monticore.tf.ast.IList {
          list_substate : mc.testcases.automaton._ast.ASTState {
            boolean initial [1] = false;
          }
       }
    }

    composition automaton_1 -- (states) [*] state_1;
    composition state_1 -- (states) [*] list_substate;
    composition state_1 -- (states) [*] state_2;
}
