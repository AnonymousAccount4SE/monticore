/* (c) https://github.com/MontiCore/monticore */

/** This is a very much simplified CD excerpt that
    exhibits some of typical CD symbols and scopes.
    It is used for demonstration only.
*/

grammar BasicCD extends de.monticore.MCBasics {

symbol scope ClassDiagram = "classdiagram" Name "{" CDElement "}" ;

// Type declarations
interface CDElement;

// Usage of a type
interface Type;

//Type used in return statements
interface ReturnType;

// pseudo interface implementations to produce non-component grammar
DummyType implements Type  =  b:"boolean" | s:"String" ;
DummyReturnType implements ReturnType  = b:"boolean" | v:"void" ;

symbol scope CDClass implements CDElement
     =   "class" Name "{" CDMethod* "}"
     ;

CDAssoc implements CDElement
    =   src:Name@CDClass
        ( bidir:"<->" | unidir:"->" )
        tgt:Name@CDClass
    ;

symbol scope CDMethod
    =   ReturnType Name FormalParameters ";" ;

FormalParameters
    =   "(" (FormalParameter || ",")* ")"
    ;

symbol FormalParameter
    =   Type Name (dim:"[" "]")*
    ;

}
