/* (c) https://github.com/MontiCore/monticore */
package mc.feature.scoperules;

grammar ScoperuleTest extends mc.common.Basics {

  scoperule extends Dummy implements IDummy = number:int
      method public void addToNumber(int count) {
        number+=count;
      }
      bar:boolean
      method public void addBarIfNonePresent() {
        if(!isBar()){
          Log.info("Added Bar!", this.getClass().getName());
        }
      }
      modifiedName:String*
      method public List<String> calculateModifiedNames() {
        for(String s: modifiedName){
          s = "Modified" + s;
        }
        return modifiedName;
      }
      symType:de.monticore.types.check.SymTypeExpression?
      method public void createSymType(){
        if(!symType.isPresent()){
          symType = Optional.of(de.monticore.types.check.SymTypeExpressionFactory.createTypeConstant("double"));
        }
      };


}