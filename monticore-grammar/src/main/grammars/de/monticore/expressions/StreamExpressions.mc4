/* (c) https://github.com/MontiCore/monticore */
package de.monticore.expressions;

import de.monticore.literals.MCCommonLiterals;

/**
 * This grammar is highly experimental
 */
component grammar StreamExpressions extends ExpressionsBasis,
                                            MCCommonLiterals {

  /* Common interface for all stream processing expressions */
  interface StreamExpression extends Expression;

  /* -------------------- Functions on Untimed Streams -------------------- */

  /* Empty Stream */
  EmptyStreamExpression implements StreamExpression = "<>";

  /* Append first element */
  AppendStreamExpression implements StreamExpression = message:Expression ":" Expression;

  /* Concatenation of streams */
  ConcatStreamExpression implements StreamExpression = StreamExpression "^" StreamExpression;

  /* Length of stream */
  LenghtStreamExpression implements StreamExpression = "#" StreamExpression;

}
