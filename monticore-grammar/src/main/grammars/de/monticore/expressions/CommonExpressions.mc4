/* (c) https://github.com/MontiCore/monticore */

package de.monticore.expressions;

component grammar CommonExpressions extends de.monticore.expressions.ExpressionsBasis {

interface InfixExpression = left:Expression operator:"" right:Expression;

CallExpression implements Expression <240> =
	Expression Arguments;

BooleanNotExpression implements Expression <200> =
	"~"  Expression;

LogicalNotExpression implements Expression <190> =
	"!" Expression;

MultExpression implements Expression <180>, InfixExpression =
	left:Expression operator:"*" right:Expression;

DivideExpression implements Expression <180>, InfixExpression =
	left:Expression operator:"/" right:Expression;

ModuloExpression implements Expression <180>, InfixExpression =
	left:Expression operator:"%" right:Expression;
    
PlusExpression implements Expression <170>, InfixExpression =
	left:Expression operator:"+" right:Expression;
        
MinusExpression implements Expression <170>, InfixExpression =
	left:Expression operator:"-" right:Expression;

LessEqualExpression implements Expression <150>, InfixExpression =
	left:Expression operator:"<=" right:Expression;
	
GreaterEqualExpression implements Expression <150>, InfixExpression =
	left:Expression operator:">=" right:Expression;
	
LessThanExpression implements Expression <150>, InfixExpression =
	left:Expression operator:"<" right:Expression;
	
GreaterThanExpression implements Expression <150>, InfixExpression =
	left:Expression operator:">" right:Expression;
	        
EqualsExpression implements Expression <130>, InfixExpression =
	left:Expression operator:"==" right:Expression;
	
NotEqualsExpression implements Expression <130>, InfixExpression =
	left:Expression operator:"!=" right:Expression;
	        
BooleanAndOpExpression implements Expression <120>, InfixExpression =
	left:Expression operator:"&&" right:Expression;
	
BooleanOrOpExpression implements Expression <117>, InfixExpression =
	left:Expression operator:"||" right:Expression;
	
ConditionalExpression implements Expression <114> =
	condition:Expression "?" trueExpression:Expression ":" falseExpression:Expression;

SimpleAssignmentExpression implements Expression <111>, InfixExpression = <rightassoc>
	left:Expression operator:"+=" right:Expression;

EquivalentExpression implements Expression <107>, InfixExpression =
    left:Expression operator:"<=>" right:Expression;

BracketExpression implements Expression <310>
    =  "(" Expression ")";
    
Arguments
    =   "(" (Expression || ",")* ")";
    
}
