/* (c) https://github.com/MontiCore/monticore */
package de.monticore.types;

/**
 * This grammar is used to generate an abstract Syntax only.
 * These AST-classes are then used to store typing information
 * in the SymbolTable.
 *
 * The grammar introduces the symbols for
 * Types, Methods, Fields and TypeVariables
 * 
 * TODO BR: "..." Gibt es bei diesem TODO noch irgendetwas zu tun?
 *
*/

component grammar TypeSymbols extends de.monticore.MCBasics {

  /*=================================================================*/

  interface scope symbol Type = Name ;

  symbolrule Type =
    methods: de.monticore.types.typesymbols._symboltable.MethodSymbol*
    fields: de.monticore.types.typesymbols._symboltable.FieldSymbol*
    typeParameter: de.monticore.types.typesymbols._symboltable.TypeVarSymbol*
  ;
  TypeImpl implements Type = Name;

  /*=================================================================*/

  interface symbol TypeVar = Name;
  symbolrule TypeVar =
    upperBound: de.monticore.typescalculator.TypeExpression*
  ;
  TypeVarImpl implements TypeVar = Name;

  /*=================================================================*/

  interface symbol Field = Name ;
  symbolrule  Field =
    type: de.monticore.typescalculator.TypeExpression
  ;
  FieldImpl implements Field = Name;

  /*=================================================================*/

  interface scope symbol Method = Name;
  symbolrule Method =
    parameter: de.monticore.types.typesymbols._symboltable.FieldSymbol*
    returnType: de.monticore.typescalculator.TypeExpression
  ;
  MethodImpl implements Method = Name;
}
