/* (c) https://github.com/MontiCore/monticore */
package de.monticore.statements;

/* Beta-version: This is intended to become a MontiCore stable grammar. */

/**
 * This grammar defines Java's mechanism for the introduction
 * of local variables with a type, an array dim and
 * including the possibility to initialize the
 * variable, e.g. private int a[] = { ... }
 *
 * This grammar is part of a hierarchy of statements, namely
 * * statements/MCStatementsBasis.mc4
 * * -- statements/MCAssertStatements.mc4
 * * -- statements/MCVarDeclarationStatements.mc4
 * * -- -- statements/MCCommonStatements.mc4
 * * -- -- -- statements/MCExceptionStatements.mc4
 * * -- -- -- statements/MCSynchronizedStatements.mc4
 * * -- statements/MCLowLevelStatements.mc4
 * * -- statements/MCReturnStatements.mc4
 *
 * and the composition of all statement grammars to full Java:
 * * -- -- statements/MCFullJavaStatements.mc4
 *
*/

component grammar MCVarDeclarationStatements
          extends de.monticore.statements.MCStatementsBasis,
                  de.monticore.types.MCBasicTypes,
                  de.monticore.expressions.ExpressionsBasis,
                  de.monticore.types.TypeSymbols {

LocalVariableDeclarationStatement implements MCBlockStatement
    = LocalVariableDeclaration ";"
    ;

LocalVariableDeclaration
    =   MCModifier* MCType (VariableDeclarator || ",")+
    ;

VariableDeclarator
    =   DeclaratorId ("=" VariableInit)?
    ;

<<<<<<< HEAD
// TODO: ! Variable wird deklariert! --> Symbol nutzen (deshalb nur Alpha)
// MB -> BR: Das ist zur Zeit in einem anderen Branch in Arbeit
// BR -> MB: (3.6.) Ich gehe davon aus, dass hier ein VariableSymbol genutzt wird
// und via SymbolMill wird da ggf. dann in Wirklichkeit ein FieldSymbol erzeugt?
DeclaratorId
=======
DeclaratorId implements Variable
>>>>>>> e69e3ffba5d709003e022dfd859251da19682aa7
    =   Name (dim:"[" "]")*
    ;

interface VariableInit;

SimpleInit implements VariableInit =
                    Expression;

ArrayInit implements VariableInit
     =   "{" (VariableInit || ",")* (",")? "}"
     ;

interface symbol Variable extends Field;

symbolrule Variable =
    annotations: de.monticore.types.check.SymTypeExpression*
    isFinal: boolean
    isReadOnly: boolean
    isVolatile: boolean
    isTransient: boolean
    isEllipsis: boolean
;

}
