#!/bin/bash
#
# Programmauswahlunterstuetzung:
# eine Liste von Kommandos sind durch Auswahl ausfuerhbar
# Interaktive Eingabe erolgt mit
#  Auswahlkuerzel weitere Argumente <Return>
#  Ende mit <return>
# Vor der Abfrage werden die Zeilen ausgegeben, die
# die Zeichen "#" und ":" direkt aufenanderfolgend enthalten

file=$0
grep "#\:" $file | sed "s/#\://g"

#--------------------------------------------------
# berechnet die Dauer einer Action (aus $start und $command)
function duration() {
    end=`date +%s`;
    sec=`echo $end - $start | bc` 
    echo "Command" $command $args "dauerte" `date -u -d @$sec +%X` "sek.  um" `date +%R` "Uhr"
}

#:------------------------------------------
#:Shortcuts fuer wichtige Kommandos:
#: 

while true; do
  read -p "==> " command args
  echo
  start=`date +%s`

#  echo commando: $command
#  echo args: $args

  case $command in
#--------------------------------------------------

!) #:shell escape
    $args ;;

a) #:= m + e: monticore bauen + experiments (8:30 min)
    cd ~/monticore/monticore-generator;
    mvn install -Dmaven.test.skip=true || bell || exit
    # cd ~/monticore/monticore-generator/it/experiments;
    # gradlew --refresh-dependencies build 
    duration ; bell ;;

mc) #:bauen +Unit -Int.Tests (mvn install; 7:30 min)
    cd ~/monticore/; mvn install 
    duration ; bell ;;

b) #:schnell bauen; ohne Tests (5:30 min)
    cd ~/monticore/;
    mvn install -Dmaven.test.skip=true || bell || exit
    duration ; bell ;;

it) #:IntegrationTests (gradle's, 30 min)
    #   * Integration tests of the generator:
    cd ~/monticore/monticore-generator/it;
    gradlew build || bell || exit
    #   * EMF Integration tests of the generator:
    cd ~/monticore/monticore-generator/it/;
    gradlew build -PbuildProfile=emf || bell || exit
    #   * Experiments integration tests:
    cd ~/monticore/monticore-generator/it/experiments/;
    gradlew build || bell || exit
    #   * Grammar integration tests:
    cd ~/monticore/monticore-grammar/monticore-grammar-it;
    gradlew build || bell || exit
    #   * TemplateClassGenerator integration tests:
    cd ~/monticore//monticore-templateclassgenerator/it/monticore-templateclassgenerator-it;
    gradlew build || bell || exit
    duration ; bell ;;

e) #:Tests aus den Experimenten (gradle's; 2:40 min -- 12 sek)
    #   * Experiments integration tests:
    cd ~/monticore/monticore-generator/it/experiments;
    gradlew --refresh-dependencies build || bell || exit 
    duration ;;

cl) #:     clean main (via mvn)
    cd ~/monticore/; mvn clean ;;

cla) #:    clean all
    cd ~/monticore/monticore-generator/it; gradlew --stop;
    cd ~/monticore/; mvn clean || bell || exit
    cd ~/monticore/monticore-generator/it;
    gradlew clean || bell || exit
    # cd ~/monticore/monticore-generator/it/;
    # gradlew clean -PbuildProfile=emf || bell || exit
    cd ~/monticore/monticore-generator/it/experiments/;
    gradlew clean || bell || exit
    cd ~/monticore/monticore-grammar/monticore-grammar-it;
    gradlew clean || bell || exit
    cd ~/monticore//monticore-templateclassgenerator/it/monticore-templateclassgenerator-it;
    gradlew clean || bell || exit
    duration ;;

cle) #:    clean experiments
    cd ~/monticore/monticore-generator/it; gradlew --stop;
    cd ~/monticore/monticore-generator/it/experiments/;
    gradlew clean 
    ;;

db) #:     delete *.bak
    cd ~/monticore/;
    find . -print | /usr/bin/grep -a '.bak$'
    rm -f `find . -print | /usr/bin/grep -a '.bak$'`
    ;;

u)  #: update: (git fetch && git pull)
    cd ~/monticore/; git fetch && git pull
    duration ;;

c)  #: commit: (git commit -am "BR from q" && git push)
    cd ~/monticore/; git commit -am "BR from q" && git push
    duration ;;



#--------------------------------------------------

#:x) oder "")    Ende der Bearbeitung
x|"") echo thanks
    exit ;;

# Hilfe nochmal ausgeben
*)  echo "Kommando nicht erkannt."
    grep "#\:" $file | sed "s/#\://g" ;;

#--------------------------------------------------
  esac
done

#--------------------------------------------------

#:
