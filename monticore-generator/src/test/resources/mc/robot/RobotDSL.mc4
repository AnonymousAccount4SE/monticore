/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package mc.robot;

grammar RobotDSL extends mc.grammars.lexicals.TestLexicals {

    token INT = ('0'..'9')+;
    
    /**
    * A procedure consists of one to many movements.
    */
    RobotProcedure =
        "procedure" Name "{"
            (Movement || ",")*
        "}";	
        
    QualifiedName =
        parts:(Name || ".")*;
    
    
    interface Movement;
    
    /**
    * Is used to reference a procedure that is defined in its own compilation unit.
    * @reference qualified name of the referenced procedure
    * @iteration amount iterate the procedure amount times
    */
    ProcedureReference implements Movement = 
    	Iteration "procedure" reference:QualifiedName;
    
    /**
    * A simple move to a direction.
    *
    * @amount iterate the move amount times
    * @direction the moves direction 
    */
    SimpleMove implements Movement = 
    	Iteration Direction;
    
    Iteration =
    	(amount:INT "*")?;

    enum Direction = 
    	"NORTH" | "WEST" | "EAST" | "SOUTH" | "UP" | "DOWN";
}
