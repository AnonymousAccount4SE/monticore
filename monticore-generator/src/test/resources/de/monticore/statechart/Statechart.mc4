package de.monticore.statechart;

component grammar Statechart extends mc.grammars.lexicals.TestLexicals {
      
  Statechart implements SCStructure= "statechart" Name "{" (states:State | transitions:Transition | userCode:Code)* "}" EOF;
  
  
  EntryAction= "entry" ":" block:BlockStatement;
  
  ExitAction= "exit" ":" block:BlockStatement;
  
 
  State implements SCStructure = "state" Name ("<<" (initial:["initial"] | final:["final"])* ">>")?
    ( ("{ options{}" (entryAction:EntryAction)? (exitAction:ExitAction)? (states:State | transitions:Transition)* "}") | ";") ;
 
  Transition = from:Name "->" to:Name 
    				(":" (event:Name ( "(" (arguments:(Argument || ",")+) ")" )? )?
  					 ("[" guard: Expression "]")?
  					 ("/" action: BlockStatement)? ";" 
  				| ";");
    
  Argument= paramType:Name paramName:Name;
 
  Code= "code" body: Classbody ;
  
  interface SCStructure;

  abstract AbstractAnything;
  
  external BlockStatement;
  
  external Expression;
  
  external Classbody;
  
 }
