/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore.fautomaton.action;


grammar Expression {

	token NUMBER = ('1'..'9')('0'..'9')*;
	
	token Name =
        ( 'a'..'z' | 'A'..'Z' | '_' | '$' )( 'a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '$' )*;
	
	interface Expression; // = IncreaseExpression | Assignment | DecreaseExpression;
	astrule Expression = Varname:Name ;
	
	interface Value; 
	astrule Value = A:NUMBER;
	
	IncreaseExpression implements Expression = varname:Name "++";
	
	DecreaseExpression implements Expression = varname:Name "--";
		
	Assignment implements Expression = varname:Name "=" (rHS:Name | value:NUMBER );
	
	ComplexAssigment extends Assignment implements Value= a:NUMBER ;
    astrule ComplexAssigment = Bds:java.util.Vector;
}
