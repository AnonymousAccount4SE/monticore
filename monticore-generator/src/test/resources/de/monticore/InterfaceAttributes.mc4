/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore;

component grammar InterfaceAttributes  extends mc.grammars.lexicals.TestLexicals {
      
   interface Prod;
   
    /** Used for embedding actions */
  external Action;
 
  ast Prod =
    Name ;
    
     interface ParserProd extends Prod;   
    
  MCGrammar =
    (["component"])? "grammar" Name       
   
      "{"
         (
              |
           LexProd
         |
           ClassProd
        
         )*
      "}" ;
      
  LexProd implements Prod =
    (["fragment"] | ["comment"]  )*
    ("token") Name
    (
      (
        ("{" initAction:Action "}")? // Statements
      |
        "{" initAction:Action "}"
      )?
         
      (":" ("{" endAction:Action  "}")? (variable:Name&
        ("->" type:Name+ (":" "{" block:Action "}" )? )? )? // Statements
      )? 
    )
    ";";
    
  ClassProd implements ParserProd =
    Name 
          
    ("{" Action "}")?    // Statements
  ";";

  ast ClassProd =
    method public String toString() { return name; } ;
 
 }
