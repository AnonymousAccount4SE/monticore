/* (c) https://github.com/MontiCore/monticore */
buildscript {
  // fake a different group for Gradle to prevent it from including the build in it self
  group = "de.mc"
}

plugins {
  id "java-library"
  id "monticore-bs" version "$previous_mc_version" // MontiCore Plugin
  id "jacoco"
}

description = 'MontiCore: Generator'
if(!hasProperty('bootstrap')){
  group = "de.monticore"
} else {
  group = "de.monticore.bs"
}


dependencies {
  implementation "de.monticore.bs:monticore-runtime:$previous_mc_version"
  implementation "de.monticore.bs:monticore-grammar:$previous_mc_version"
  implementation "de.monticore.bs:monticore-grammar:$previous_mc_version:grammars"
  implementation "de.se_rwth.commons:se-commons-groovy:$se_commons_version"
  implementation "de.se_rwth.commons:se-commons-logging:$se_commons_version"
  implementation "de.monticore.lang.bs:cd4analysis:$cd4a_version"
  grammar "de.monticore.lang.bs:cd4analysis:$cd4a_version:grammars"
  implementation "org.antlr:antlr4:$antlr_version"
  implementation ('com.google.guava:guava:25.1-jre'){
    force(true)
  }
  implementation 'org.codehaus.groovy:groovy:3.0.7'
  implementation "org.apache.commons:commons-lang3:$commons_lang3_version"
  implementation "commons-cli:commons-cli:$commons_cli_version"
  testImplementation 'com.github.javaparser:javaparser-symbol-solver-core:3.14.11'
  testImplementation "junit:junit:$junit_version"
  testImplementation 'ch.qos.logback:logback-classic:1.1.2'
  testImplementation 'org.mockito:mockito-core:3.3.3'
}

sourceSets {
  main.java.srcDirs += [ "$buildDir/generated-sources/monticore/sourcecode"]
  
  grammars {
    resources {
      srcDirs(grammarDir)
      include "**/*.mc4"
    }
  }
}

task  generateGrammarFamily (type: MCTask) {
  grammar = file "$grammarDir/de/monticore/grammar/GrammarFamily.mc4"
  outputDir = file "$buildDir/generated-sources/monticore/sourcecode"
  def uptoDate = incCheck("de/monticore/grammar/GrammarFamily.mc4")
  outputs.upToDateWhen { uptoDate }
}

compileJava {
  dependsOn project.collect { it.tasks.withType(MCTask) }
}

java {
  registerFeature('grammars') {
    usingSourceSet(sourceSets.grammars)
  }
}

jar.dependsOn grammarsJar

publishing {
  publications {
    maven(org.gradle.api.publish.maven.MavenPublication) {
      from(components.java)
    }
  }
}