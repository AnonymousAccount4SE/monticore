package de.monticore.emf.fautomaton.automaton;

grammar FlatAutomaton {

	/** An finite automaton
	@attribute name Name of the automaton
    @attribute State List of all states
    @attribute Transition List of all transitions
	*/
	Automaton =
	   "automaton" Name "{" 
	     (State | Transition )* "}";
	   
	   token Name =
        ( 'a'..'z' | 'A'..'Z' | '_' | '$' )( 'a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '$' )*;

    /** A state in a finite automaton
    @attribute name Name of the state
    @attribute final True if state is final
    @attribute initial True if state is initial
    */
	State =
	  "state" Name
	  (("<<" initial:["initial"] ">>" ) | ("<<" Final:["final"] ">>" ))* ";"  ;

    /** A transition in a finite automaton
    @attribute from The source of the transition
    @attribute activate Character that triggers the transition
    @attribute to The target of the transition
    */
	Transition =
	  from:Name "-" activate:Name ">" to:Name ";"  ;
	  	
	
}