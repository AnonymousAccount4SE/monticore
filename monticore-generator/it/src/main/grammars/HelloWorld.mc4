/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

/*

This grammar is a test that generation also works for top level concepts


*/
grammar HelloWorld extends mc.common.Basics { 


Start = "Hello" "World" "!";


Composite implements Component =  
  "composite"  "(" children:Component* ")";
  

Leaf implements Component =
  "leaf" value:STRING ;

astrule Composite =
  method public int getDepth() {
    int maxDepth = 0; 
    for (ASTComponent child: getChildren()) {
      int depth = child.getDepth() + 1;
      if (depth>maxDepth) {
        maxDepth = depth;
      }
    }
    return maxDepth;
  }
;

astrule Leaf = 
 Children:Component*
 method public int getDepth() { return 0;}
;

interface Component;
astrule Component =
  children:Component*
  method public int getDepth() {}
;


Test =	["private"];

}
