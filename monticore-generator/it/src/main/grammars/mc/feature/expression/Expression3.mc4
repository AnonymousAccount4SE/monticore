/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

/* Sinnfreise Sprache um MontiCore zu testen */
package mc.feature.expression;

grammar Expression3 extends mc.common.Basics { 

  token NumericLiteral = ('0'..'9')+;

  // Exression with interfaces and two alternatives for implementing rules (MultExpr and AddExpr)
  interface Expr; 
  	
  MultExpr implements Expr <9> = 
  	left:Expr star:["*"] right:Expr
  	| left:Expr div:["/"] right:Expr;
  	
  AddExpr implements Expr <8> =
  	left:Expr plus:["+"] right:Expr
  	| left:Expr minus:["-"] right:Expr;
  
  PowerExpr implements Expr <10> = 
  	<rightassoc> left:Expr op:["^"] right:Expr;
  
  BracketExpr implements Expr <7> =
  	"(" Expr ")";
  	
  PrimaryExpr implements Expr <1> =
  	NumericLiteral;

}
