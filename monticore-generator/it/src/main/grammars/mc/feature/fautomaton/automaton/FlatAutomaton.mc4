/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package mc.feature.fautomaton.automaton;

grammar FlatAutomaton extends mc.common.Basics {

	/** An finite automaton
	@attribute name Name of the automaton
    @attribute State List of all states
    @attribute Transition List of all transitions
	*/
	Automaton =
	   "automaton" Name "{" 
	     (State | Transition )*// (names : Name)* (impState:State)
	   "}";

    /** A state in a finite automaton
    @attribute name Name of the state
    @attribute final True if state is final
    @attribute initial True if state is initial
    */
	State =
	  "state" Name
	  (("<<" initial:["initial"] ">>" ) | ("<<" final:["final"] ">>" ))* ";"  ;

    /** A transition in a finite automaton
    @attribute from The source of the transition
    @attribute activate Character that triggers the transition
    @attribute to The target of the transition
    */
	Transition =
	  from:Name "-" activate:Name ">" to:Name ";"  ;
}
