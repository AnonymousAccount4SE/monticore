/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

/* Sinnfreise Sprache, an Automaten angelehnt, um MontiCore zu testen */
package mc.feature.grammarinherit.sub;
	
grammar FeatureDSLgrammarinherit extends mc.feature.grammarinherit.sup.FeatureDSLgrammarinherit {

  // Works with inherited field a
  concept antlr { 
		
	 parserjava{
			public int b=this.a;
		}
	}
		
  File = (automatons:Automaton)+;

  Automaton=
    "automaton" Name "{" (states:State | transitions:Transition )* "}" ;
    
  Stereotype =
    Name ;
    
  State =
    "state" Name ("<<" (stereotypes:Stereotype ("," stereotypes:Stereotype )*) ">>")?
    ( ("{" (states:State | transitions:Transition)* "}") | ";") ;

  S =
    "<<>" ;

  // Checks interface inheritance
  T = Inter;	


  B implements Y;
	
}
