/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package mc.feature.semanticpredicate;

grammar SemPredWithInterface extends mc.common.Basics {

    concept antlr {
      parserjava {
        boolean first = true;
      }
    }
    
    ISequence = I*;
    
    interface I;
    
    astrule I = 
      method public boolean isFirst() {}
      method public void setFirst(boolean first) {};
      
    astrule FirstRun =
      first: boolean;
      
    astrule OtherRun =
      first: boolean;
    
    FirstRun implements { first }? I =
        { _aNode.setFirst(true); first = false;} "foo";
    
    OtherRun implements { !first }? I =
        {_aNode.setFirst(false);} "foo";
}
