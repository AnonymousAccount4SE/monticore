/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package mc.examples.automaton;

grammar Automaton extends mc.grammar.lexicals.Lexicals {

symbol scope Automaton =
  "automaton" Name "{" (State | Transition)* "}" ;

/** A ASTState represents a state of a finite automaton
    @attribute Name Name of state
    @attribute start True if state is start state
    @attribute final True if state is a final state
    @attribute States List of states
    @attribute Transitions List of transitions
*/
symbol scope State =
  "state" Name
  
  (("<<" ["initial"] ">>" ) | ("<<" ["final"] ">>" ))*
  
  ( ("{" (State | Transition)* "}") | ";") ;


/** A ASTTransition represents a transition
    @attribute From Name of the state from which the transitions starts
    @attribute Activate Activation signal for this transition
    @attribute To Name of the state to which the transitions goes
*/ 
Transition =
  from:Name "-" activate:Name ">" to:Name ";" ;
  
}
