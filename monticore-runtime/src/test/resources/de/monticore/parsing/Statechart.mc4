/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore.parsing;

grammar StatechartDSL { 

options { 
	parser "k=3;"
	lexer "k=2; " 
		
}
      
  Statechart implements SCStructure= "statechart" Name "{" (States:State | Transitions:Transition | UserCode:Code)* "}" EOF;
  
  
  EntryAction= "entry" ":" Block:BlockStatement;
  
  ExitAction= "exit" ":" Block:BlockStatement;
  
 
  State implements SCStructure = "state" Name ("<<" (Initial:["initial"] | Final:["final"])* ">>")?
    ( ("{ options{}" (EntryAction:EntryAction)? (ExitAction:ExitAction)? (States:State | Transitions:Transition)* "}") | ";") ;
 
  Transition = From:Name "->" To:Name 
    				(":" (Event:Name ( "(" (Arguments:Argument ( "," Arguments:Argument)*) ")" )? )?
  					 ("[" Guard: Expression "]")?
  					 ("/" Action: BlockStatement)? ";" 
  				| ";");
    
  Argument= ParamType:Name ParamName:Name;
 
  Code= "code" Code: Classbody ;
  
  interface SCStructure; 
  
  external BlockStatement;
  
  external Expression;
  
  external Classbody;
  
 }
