package de.monticore.emf._ast.util;

import java.util.List;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;

import de.monticore.emf._ast.*;

/**
 * <!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance
 * hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the method for each class of the model, starting with the actual
 * class of the object and proceeding up the inheritance hierarchy until a
 * non-null result is returned, which is the result of the switch. <!--
 * end-user-doc -->
 */

public class ASTENodeSwitch<W> {
  
  /**
   * The cached model package
   */
  protected static ASTENodePackage modelPackage;
  
  /**
   * Creates an instance of the switch.
   */
  public ASTENodeSwitch() {
    if (modelPackage == null) {
      modelPackage = ASTENodePackage.eINSTANCE;
    }
  }
  
  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a
   * non null result; it yields that result.
   * 
   * @return the first non-null result returned by a call.
   */
  public W doSwitch(EObject theEObject) {
    return doSwitch(theEObject.eClass(), theEObject);
  }
  
  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a
   * non null result; it yields that result.
   * 
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   */
  protected W doSwitch(EClass theEClass, EObject theEObject) {
    if (theEClass.eContainer() == modelPackage) {
      return doSwitch(theEClass.getClassifierID(), theEObject);
    }
    else {
      List<EClass> eSuperTypes = theEClass.getESuperTypes();
      return eSuperTypes.isEmpty() ?
          defaultCase(theEObject) :
          doSwitch(eSuperTypes.get(0), theEObject);
    }
  }
  
  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a
   * non null result; it yields that result.
   * 
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   */
  protected W doSwitch(int classifierID, EObject theEObject) {
    switch (classifierID) {
    /* generated by mc.codegen.emf.util.ESwitchDoSwitch */
      case ASTENodePackage.ENODE: {
        ASTENode eNode = (ASTENode) theEObject;
        W result = caseENode(eNode);
        
        if (result == null)
          result = defaultCase(theEObject);
        return result;
      }
      
      default:
        return defaultCase(theEObject);
    }
  }
  
  /* generated by mc.codegen.emf.util.ESwitchCase */
  public W caseENode(ASTENode object) {
    return null;
  }
  
  /**
   * Returns the result of interpreting the object as an instance of '
   * <em>EObject</em>'. <!-- begin-user-doc --> This implementation returns
   * null; returning a non-null result will terminate the switch, but this is
   * the last case anyway. <!-- end-user-doc -->
   * 
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '
   * <em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   */
  public W defaultCase(EObject object) {
    return null;
  }
}
